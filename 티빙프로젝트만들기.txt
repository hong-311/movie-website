** ReduxThunk와 react-router-dom을 이용해서 프로젝트 만들기
1. 가상 API 생성 - json-server & concurrently & axios(서버데이터호출)
2. 폴더구조짜기
    1) apis : API를 axios로 호출하는 문서
    2) pages : Route컴포넌트와 연결돼서 파라미터를 통해 페이지를 생성해줄 컴포넌트
    3) libs : 리덕스 모듈을 편리하게 작업하기 위한 유틸문서담기
    4) modules : 리덕스 모듈 문서를 담는 폴더
    5) containers : 스토어부터 데이터를 받아 프레젠테이션널 컴포넌트에 뿌려주는 컨테이너 컴포넌트 모음
    6) components : 프레젠테이셔널 컴포넌트 - 실제 화면에 CSS와 구현되는 컴포넌트
3. index.js : 스토어 생성
========== 위에 까지가 기본작업 ================
========== 아래부터는 큰 행간별 반복작업 ================
4. apis폴더에 API호출문서 만들기 : ex) tvingbest.js
    - 전체데이터호출과 각각 데이터 호출을 나눠 줄것
5. modules폴더에 리덕스모듈 생성 : ex) tvingbest.js
6. 루트 리듀서에 연결
7. 전체페이지관련 컨테이너컴포넌트 생성 - 스토어로부터 데이터 가져오기
8. 데이터를 표시해주는 page컴포넌트 생성 혹은 연결
9. App.js에 페이지 컴포넌트를 Route로 연결
10. 전체페이지관련 로딩중, 성공, 에러페이지를 프레젠테이셔널컴포넌트로 생성 후 컨테이너컴포넌트에 연결
11. 각각 프레젠테이셔널컴포넌트를 구현
12. 각각데이터 페이지 컴포넌트 생성 => 파라미터정보를 받아야 하기 때문
13. App.jsd에 Route로 연결
14. 각각데이터 컨테이너컴포넌트를 만들고 페이지 컴포넌트에 연결(이때 파라미터 정보 넘기기)
15. 각각데이터 컨테이너컴포넌트에 파라미터 정보를 받아 스토어 데이터 받아오기
16. 각각데이터 관련 로딩중, 성공, 에러페이지를 프레젠테이셔널컴포넌트로 생성 후 연결
17. 각각 프레젠테이셔널컴포넌트를 구현